// da3.cpp 
// Elliott Lewandowski
// 2024-09-26
//
// For CS 311 Fall 2024
// Source for Assignment 3 functions
//
// Acknowledgement: The skeleton for this file was
//      written by Glenn G. Chappell

#include "da3.hpp"     // For Assignment 3 prototypes & templates

#include <functional>
using std::function;

// Possible Exceptions: 
//    This function will rethrow any exceptions generated by function ff
// 
// Preconditions:
//    ff must be either a function pointer or an object that acts like a function 
void didItThrow(const function<void()> & ff,
                bool & threw)
{
    try
    {
        ff();
        threw = false;
    }
    catch(...)
    {
        threw = true;
        throw;
    }
    
}

// Possible Exceptions: 
//    Does not throw
//
// Preconditions:
//    a and b must be non-negative integers
//    a and b cannot both be 0
int gcd(int a,
        int b)
{
    // Base Case
    if ( a > b)
        std::swap(a, b);

    if (a == 0)
        return b;
    
    // Recursive Case
    return gcd(b % a, a);    
}

